@import "global.scss";
@import "variables.scss";
@import "typography.scss";

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-font-size, $max-font-size) {
    $min-vw: 320px;
    $max-vw: 1200px;
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
        & {
            font-size: $min-font-size;

            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }

            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}

.personal-best, .current-score { 
    @include fluid-type(16px, 20px);
    position: fixed;
    font-weight: 200;
    color: #fff;
    white-space: nowrap;
    user-select: none;
    mix-blend-mode: overlay;
    text-transform: uppercase; 
    transform: translateX(-50%); 
    z-index: 1;
    letter-spacing: .05em;
    opacity: .25;
    top: 5vh;     
    opacity: .25;
    left: 50%;
}

.current-score { 
    opacity: 1;
    margin-top: 1.5rem;  
    @include fluid-type(24px, 32px);
}

.timer, .distance-counter {
    position: fixed;
    font-weight: 300;
    color: #fff;
    user-select: none;
    mix-blend-mode: overlay;
    text-transform: uppercase; 
    white-space: nowrap; 
    animation-duration: .3s;
    animation-fill-mode: both;
    animation-name: stats-in; 
    @include fluid-type(24px, 32px); 
    letter-spacing: .05em;
    opacity: .75;
    top: 5vh; 
    line-height: 1;
    z-index: 1;
    user-select: none; 

    span {
        display: block; 
        font-size: .5em;
        margin-top: .35em;
        font-weight: 200;
        opacity: .5;
    }
}

.timer {
    left: 50%;
    margin-left: .35em;  
}

.distance-counter {
    margin-right: .35em;
    right: 50%;
    text-align: right; 
}

.boom {
    position: fixed;
    font-size: 2em;
    letter-spacing: .05em;
    font-weight: 200;
    color: #FFF;
    user-select: none;
    mix-blend-mode: overlay;
    bottom: 5vh;
    left: 50%;
    z-index: 1;
    opacity: .75;
    transform: translateX(-50%);
    text-transform: uppercase;
    padding: 1em 2em;
    cursor: pointer;
    transition: all .25s;

    &:hover {
        font-weight: 300;
        opacity: 1;
    }
}

body::after {
    content: "";
    display: block;
    width: 100vw;
    height: 100vh;
    background-image: linear-gradient(45deg, rgba(#fbff00, 0), rgba(#fbff00, .1));
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
}

.message {
    position: absolute;
    z-index: 1;
    bottom: 8vh;
    left: 50%;
    transform: translateX(-50%);
    letter-spacing: .1em;
    color: #FFF;
    mix-blend-mode: overlay;
    font-weight: 200;
    animation: message-in .35s both .5s;
    opacity: .4;
    user-select: none;
    text-transform: uppercase;
    @include fluid-type(18px, 28px);
}

.title {
    position: absolute;
    display: block;
    top: 45%;
    z-index: 1;
    margin-top: -.1em;
    left: 50%;
    transform: translate(-50%, -50%) skewY(-14deg);
    user-select: none;
    line-height: 1.05;
    font-weight: 500;
    letter-spacing: -.01em;
    white-space: pre;
    color: #e1ff00;
    mix-blend-mode: lighten;
    @include fluid-type(60px, 200px);

    &--intro {
        @include fluid-type(85px, 250px);
    }

    &__letter {
        animation: title-letter-in .35s both ease-out;
        opacity: 0;
        display: inline-block;
        position: relative;

        @for $i from 1 through 35 {
            &:nth-child(#{$i}) {
                animation-delay: ($i * .1) + s;
            }
        }
    }
}

@keyframes title-letter-in {
    from {
        opacity: 0;
        transform: translateX(0);
    }

    50% {
        transform: translateX(1rem);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes message-in {
    from {
        opacity: 0;
        transform: translateY(1em) translateX(-50%);
    }

    to {
        opacity: 1;
        transform: translateY(0) translateX(-50%);
    }
}

@keyframes stats-in {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}
 